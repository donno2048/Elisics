<phyphox version="1.10" locale="en">
  <title>Doppler effect</title>
  <category>Acoustics</category>
  <icon format="base64"></icon>
  <description>
        Detect small frequency shifts of the Doppler effect.

        You need a tone generator that emits a constant frequency (for example 1000Hz). Enter this base frequency in the experiments setup and select a detection range in which you expect the Doppler shifted frequency (for example 10Hz). The experiment will determine the recorded frequency and calculate the relative speed of the sound source.
    </description>
  <link label="Wiki">http://phyphox.org/wiki/index.php?title=Experiment:_Doppler_Effect</link>
    <data-containers>
    <container size="48000">recording</container>
    <container>rate</container>
    <container>tmax</container>
    <container size="48000">time</container>
    <container>f</container>
    <container>df</container>
    <container>dt</container>
    <container>dt_samples</container>
    <container>c</container>
    <container size="1000" static="true">Nth_step</container>
    <container size="1000">Nth_frequency_lower_limit</container>
    <container size="1000">Nth_period_upper_limit</container>
    <container size="1000">Nth_step_filtered</container>
    <container size="1000">Nth_period_upper_limit_filtered</container>
    <container>periodFactor</container>
    <container>minf</container>
    <container>maxf</container>
    <container>minPeriod</container>
    <container>maxPeriod</container>
    <container>startTime</container>
    <container size="100">period</container>
    <container size="100">frequency</container>
    <container size="100">temp1</container>
    <container size="100">temp2</container>
    <container size="100">temp3</container>
    <container size="100">speed</container>
    <container size="100">time_res</container>
    <container size="0">frequency_hist</container>
    <container size="0">frequency_hist_filtered</container>
    <container size="0">speed_hist</container>
    <container size="0">speed_hist_filtered</container>
    <container size="0">time_hist</container>
    <container size="0">time_hist_filtered</container>
  </data-containers>
  <input>
    <audio>
      <output>recording</output>
      <output component="rate">rate</output>
    </audio>
  </input>
  <views>
    <view label="Setup">
      <edit label="Base frequency" unit="Hz" default="1000" signed="false">
        <output>f</output>
      </edit>
      <edit label="Frequency range" unit="Hz" default="10" signed="false">
        <output>df</output>
      </edit>
      <edit label="Time step" unit="ms" default="50" signed="false">
        <output>dt</output>
      </edit>
      <edit label="Speed of sound" unit="m/s" default="340" signed="false">
        <output>c</output>
      </edit>
      <separator height="1"/>
      <info label="Time step determines the rate and the amount of data that is used to calculate a single velocity point. The algorithm will look for a frequency around the base frequency from -range to +range and use the nth period (below) to determine the frequency. Extreme settings for the range or time step may be inaccurate or too hard to calculate for your phone. Also, you should keep range significantly smaller than 1/step."/>
      <value label="nth period">
        <input>periodFactor</input>
      </value>
    </view>
    <view label="Results">
      <graph label="Frequency" labelX="t" unitX="s" labelY="Frequency" unitY="Hz" partialUpdate="true">
        <input axis="x">time_hist_filtered</input>
        <input axis="y">frequency_hist_filtered</input>
      </graph>
      <graph label="Speed" labelX="t" unitX="s" labelY="Speed" unitY="m/s" unitYperX="m/s²" partialUpdate="true" color="ffff00">
        <input axis="x">time_hist_filtered</input>
        <input axis="y">speed_hist_filtered</input>
      </graph>
    </view>
  </views>
  <analysis sleep="0.5">
    <divide>
      <input type="value">48000</input>
      <input clear="false">rate</input>
      <output>tmax</output>
    </divide>
    <ramp>
      <input as="start" type="value">0</input>
      <input as="stop" clear="false">tmax</input>
      <output>time</output>
    </ramp>
    <ramp>
      <input as="start" type="value">1</input>
      <input as="stop" type="value">1000</input>
      <output>Nth_step</output>
    </ramp>
    <subtract>
      <input clear="false">f</input>
      <input clear="false">df</input>
      <output>minf</output>
    </subtract>
    <add>
      <input clear="false">f</input>
      <input clear="false">df</input>
      <output>maxf</output>
    </add>
    <divide>
      <input clear="false">minf</input>
      <input clear="false">Nth_step</input>
      <output>Nth_frequency_lower_limit</output>
    </divide>
    <divide>
      <input clear="false">rate</input>
      <input>Nth_frequency_lower_limit</input>
      <output>Nth_period_upper_limit</output>
    </divide>
    <multiply>
      <input clear="false">dt</input>
      <input type="value">48</input>
      <output clear="false">dt_samples</output>
    </multiply>
    <rangefilter>
      <input as="in">Nth_period_upper_limit</input>
      <input as="max" clear="false">dt_samples</input>
      <input as="in">Nth_step</input>
      <output>Nth_period_upper_limit_filtered</output>
      <output>Nth_step_filtered</output>
    </rangefilter>
    <max>
      <input as="y">Nth_step_filtered</input>
      <output as="max">periodFactor</output>
    </max>
    <multiply>
      <input clear="false">periodFactor</input>
      <input clear="false">rate</input>
      <output>temp1</output>
    </multiply>
    <divide>
      <input clear="false">temp1</input>
      <input clear="false">minf</input>
      <output>maxPeriod</output>
    </divide>
    <divide>
      <input>temp1</input>
      <input clear="false">maxf</input>
      <output>minPeriod</output>
    </divide>
    <periodicity>
      <input as="x">time</input>
      <input as="y">recording</input>
      <input as="dx">dt_samples</input>
      <input as="overlap" type="value">0</input>
      <input as="min">minPeriod</input>
      <input as="max">maxPeriod</input>
      <output as="time">time_res</output>
      <output as="period">period</output>
    </periodicity>
    <divide>
      <input clear="false">periodFactor</input>
      <input>period</input>
      <output>frequency</output>
    </divide>
    <divide>
      <input clear="false">f</input>
      <input clear="false">frequency</input>
      <output>temp2</output>
    </divide>
    <subtract>
      <input type="value">1</input>
      <input>temp2</input>
      <output>temp3</output>
    </subtract>
    <multiply>
      <input clear="false">c</input>
      <input>temp3</input>
      <output>speed</output>
    </multiply>
    <append>
      <input>frequency</input>
      <output clear="false">frequency_hist</output>
    </append>
    <append>
      <input>speed</input>
      <output clear="false">speed_hist</output>
    </append>
    <timer>
      <output>startTime</output>
    </timer>
    <add>
      <input>time_res</input>
      <input>startTime</input>
      <output clear="false">time_hist</output>
    </add>
    <rangefilter>
      <input as="min">minf</input>
      <input as="max">maxf</input>
      <input as="in" clear="false">frequency_hist</input>
      <input as="in" clear="false">time_hist</input>
      <input as="in" clear="false">speed_hist</input>
      <output>frequency_hist_filtered</output>
      <output>time_hist_filtered</output>
      <output>speed_hist_filtered</output>
    </rangefilter>
  </analysis>
  <export>
    <set name="Frequency and speed">
      <data name="Time (s)">time_hist</data>
      <data name="Frequency (Hz)">frequency_hist_filtered</data>
      <data name="Speed (m/s)">speed_hist</data>
    </set>
  </export>
</phyphox>
